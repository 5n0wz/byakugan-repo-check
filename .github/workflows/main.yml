# This is a basic workflow to help you get started with Actions

name: Full scan

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      name:
        description: "Application name"
        required: true
      url:
        description: "Repository url"
        required: true
      branch:
        description: "Repository branch"
        required: true
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  clone:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
  
      # Runs a single command using the runners shell
      - name: Clone github repository
        run: |
          git clone $URL --branch $BRANCH --single-branch $NAME
        env:
          NAME: ${{ inputs.name }}
          URL: ${{ inputs.url }}
          BRANCH: ${{ inputs.branch }}
      
      - name: Upload repository as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.name }}
          path: ${{ inputs.name }}
          
  semgrep:
    # User definable name of this GitHub Actions job.
    name: semgrep-oss/scan
    # If you are self-hosting, change the following `runs-on` value: 
    runs-on: ubuntu-latest

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: semgrep/semgrep

    needs: clone
    
    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      # Fetch project source with GitHub Actions Checkout. Use either v3 or v4.
      - name: Get cloned repo   
        uses: actions/checkout@v4
        with:
          name: ${{ inputs.name }}
          path: ${{ inputs.name }}
      
      - name: Run scan
      # Run the "semgrep scan" command on the command line of the docker image.
        run: |
          ls -la
          cd ${{ inputs.name }}
          semgrep scan --config auto --json --output semgrep-report.json || true
      # Upload the results of the scan as a GitHub Actions artifact.
      - name: Upload semgrep report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report   